{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red24\green24\blue24;\red193\green193\blue193;
\red194\green126\blue101;\red67\green192\blue160;\red140\green211\blue254;\red202\green202\blue202;\red212\green214\blue154;
\red183\green111\blue179;\red167\green197\blue152;\red89\green138\blue67;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c12157\c12157\c12157;\cssrgb\c80000\c80000\c80000;
\cssrgb\c80784\c56863\c47059;\cssrgb\c30588\c78824\c69020;\cssrgb\c61176\c86275\c99608;\cssrgb\c83137\c83137\c83137;\cssrgb\c86275\c86275\c66667;
\cssrgb\c77255\c52549\c75294;\cssrgb\c70980\c80784\c65882;\cssrgb\c41569\c60000\c33333;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 'dart:convert'\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 'dart:io'\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 'package:crypto/crypto.dart'\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 String\cf4 \strokec4  \cf7 \strokec7 secret\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf5 \strokec5 "agatao"\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb3 \strokec9 main\cf4 \strokec4 () \cf10 \strokec10 async\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 server\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf10 \strokec10 await\cf4 \strokec4  \cf6 \strokec6 HttpServer\cf4 \strokec4 .\cf9 \strokec9 bind\cf4 \strokec4 (\cf6 \strokec6 InternetAddress\cf4 \strokec4 .\cf7 \strokec7 loopbackIPv4\cf4 \strokec4 , \cf11 \strokec11 4040\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 server\cf4 \strokec4 .\cf9 \strokec9 listen\cf4 \strokec4 ((\cf7 \strokec7 request\cf4 \strokec4 ) \cf10 \strokec10 async\cf4 \strokec4  \{\cb1 \
\cb3     \cf10 \strokec10 if\cf4 \strokec4  (\cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 uri\cf4 \strokec4 .\cf7 \strokec7 path\cf4 \strokec4  \cf8 \strokec8 ==\cf4 \strokec4  \cf5 \strokec5 "/login"\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 response\cf4 \strokec4 .\cf9 \strokec9 write\cf4 \strokec4 (\cf9 \strokec9 _generateToken\cf4 \strokec4 ());\cb1 \
\cb3     \} \cf10 \strokec10 else\cf4 \strokec4  \cf10 \strokec10 if\cf4 \strokec4  (\cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 uri\cf4 \strokec4 .\cf7 \strokec7 path\cf4 \strokec4  \cf8 \strokec8 ==\cf4 \strokec4  \cf5 \strokec5 "/teste"\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 if\cf4 \strokec4  (\cf9 \strokec9 _testToken\cf4 \strokec4 (\cf7 \strokec7 request\cf4 \strokec4 )) \{\cb1 \
\cb3         \cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 response\cf4 \strokec4 .\cf9 \strokec9 write\cf4 \strokec4 (\cf5 \strokec5 'BEM VINDO'\cf4 \strokec4 );\cb1 \
\cb3       \} \cf10 \strokec10 else\cf4 \strokec4  \{\cb1 \
\cb3         \cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 response\cf4 \strokec4 .\cf9 \strokec9 write\cf4 \strokec4 (\cf5 \strokec5 'NEGADO'\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\cb3       \cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 response\cf4 \strokec4 .\cf9 \strokec9 write\cf4 \strokec4 (\cf5 \strokec5 'teste'\cf4 \strokec4 );\cb1 \
\cb3     \} \cf10 \strokec10 else\cf4 \strokec4  \{\cb1 \
\cb3       \cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 response\cf4 \strokec4 .\cf7 \strokec7 statusCode\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf11 \strokec11 404\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 response\cf4 \strokec4 .\cf9 \strokec9 write\cf4 \strokec4 (\cf5 \strokec5 'nao encontrada'\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf10 \strokec10 await\cf4 \strokec4  \cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 response\cf4 \strokec4 .\cf9 \strokec9 close\cf4 \strokec4 ();\cb1 \
\cb3   \});\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 bool\cf4 \strokec4  \cf9 \strokec9 _testToken\cf4 \strokec4 (\cf6 \strokec6 HttpRequest\cf4 \strokec4  \cf7 \strokec7 request\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 token\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf7 \strokec7 request\cf4 \strokec4 .\cf7 \strokec7 headers\cf4 \strokec4 [\cf5 \strokec5 "Authorization"\cf4 \strokec4 ][\cf11 \strokec11 0\cf4 \strokec4 ].\cf9 \strokec9 split\cf4 \strokec4 (\cf5 \strokec5 " "\cf4 \strokec4 )[\cf11 \strokec11 1\cf4 \strokec4 ];\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 tokens\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf7 \strokec7 token\cf4 \strokec4 .\cf9 \strokec9 split\cf4 \strokec4 (\cf5 \strokec5 "."\cf4 \strokec4 );\cb1 \
\
\cb3   \cf6 \strokec6 String\cf4 \strokec4  \cf7 \strokec7 header64\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf7 \strokec7 tokens\cf4 \strokec4 [\cf11 \strokec11 0\cf4 \strokec4 ];\cb1 \
\cb3   \cf6 \strokec6 String\cf4 \strokec4  \cf7 \strokec7 payload64\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf7 \strokec7 tokens\cf4 \strokec4 [\cf11 \strokec11 1\cf4 \strokec4 ];\cb1 \
\cb3   \cf6 \strokec6 Map\cf4 \strokec4  \cf7 \strokec7 payload\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf9 \strokec9 jsonDecode\cf4 \strokec4 (\cf7 \strokec7 utf8\cf4 \strokec4 .\cf9 \strokec9 decode\cf4 \strokec4 (\cf9 \strokec9 base64Decode\cf4 \strokec4 (\cf7 \strokec7 payload64\cf4 \strokec4 )));\cb1 \
\cb3   \cf6 \strokec6 String\cf4 \strokec4  \cf7 \strokec7 sign64\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf7 \strokec7 tokens\cf4 \strokec4 [\cf11 \strokec11 2\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 hmac\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf6 \strokec6 Hmac\cf4 \strokec4 (\cf7 \strokec7 sha256\cf4 \strokec4 , \cf7 \strokec7 secret\cf4 \strokec4 .\cf7 \strokec7 codeUnits\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 digest\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf7 \strokec7 hmac\cf4 \strokec4 .\cf9 \strokec9 convert\cf4 \strokec4 (\cf5 \strokec5 "\cf8 \strokec8 $\cf7 \strokec7 header64\cf5 \strokec5 .\cf8 \strokec8 $\cf7 \strokec7 payload64\cf5 \strokec5 "\cf4 \strokec4 .\cf7 \strokec7 codeUnits\cf4 \strokec4 );\cb1 \
\cb3   \cf6 \strokec6 String\cf4 \strokec4  \cf7 \strokec7 signGlobal\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf9 \strokec9 base64Encode\cf4 \strokec4 (\cf7 \strokec7 digest\cf4 \strokec4 .\cf7 \strokec7 bytes\cf4 \strokec4 );\cb1 \
\
\cb3   \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 sign64\cf4 \strokec4  \cf8 \strokec8 ==\cf4 \strokec4  \cf7 \strokec7 signGlobal\cf4 \strokec4  \cf8 \strokec8 &&\cf4 \strokec4  \cf6 \strokec6 DateTime\cf4 \strokec4 .\cf9 \strokec9 now\cf4 \strokec4 ().\cf7 \strokec7 millisecondsSinceEpoch\cf4 \strokec4  \cf8 \strokec8 <\cf4 \strokec4  \cf7 \strokec7 payload\cf4 \strokec4 [\cf5 \strokec5 "exp"\cf4 \strokec4 ];\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 String\cf4 \strokec4  \cf9 \strokec9 _generateToken\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3   \cf12 \strokec12 //header\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 header\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 "alg"\cf8 \strokec8 :\cf4 \strokec4  \cf5 \strokec5 "HS256"\cf4 \strokec4 ,\cb1 \
\cb3     \cf5 \strokec5 "typ"\cf8 \strokec8 :\cf4 \strokec4  \cf5 \strokec5 "jwt"\cf4 \strokec4 ,\cb1 \
\cb3   \};\cb1 \
\
\cb3   \cf6 \strokec6 String\cf4 \strokec4  \cf7 \strokec7 header64\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf9 \strokec9 base64Encode\cf4 \strokec4 (\cf9 \strokec9 jsonEncode\cf4 \strokec4 (\cf7 \strokec7 header\cf4 \strokec4 ).\cf7 \strokec7 codeUnits\cf4 \strokec4 );\cb1 \
\
\cb3   \cf12 \strokec12 //payload\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 payload\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 "sub"\cf8 \strokec8 :\cf4 \strokec4  \cf11 \strokec11 1\cf4 \strokec4 ,\cb1 \
\cb3     \cf5 \strokec5 "name"\cf8 \strokec8 :\cf4 \strokec4  \cf5 \strokec5 "agatao"\cf4 \strokec4 ,\cb1 \
\cb3     \cf5 \strokec5 "admin"\cf8 \strokec8 :\cf4 \strokec4  \cf2 \strokec2 false\cf4 \strokec4 ,\cb1 \
\cb3     \cf5 \strokec5 "exp"\cf8 \strokec8 :\cf4 \strokec4  \cf6 \strokec6 DateTime\cf4 \strokec4 .\cf9 \strokec9 now\cf4 \strokec4 ().\cf7 \strokec7 millisecondsSinceEpoch\cf4 \strokec4  \cf8 \strokec8 +\cf4 \strokec4  \cf11 \strokec11 60000\cf4 \strokec4 ,\cb1 \
\cb3   \};\cb1 \
\
\cb3   \cf6 \strokec6 String\cf4 \strokec4  \cf7 \strokec7 payload64\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf9 \strokec9 base64Encode\cf4 \strokec4 (\cf9 \strokec9 jsonEncode\cf4 \strokec4 (\cf7 \strokec7 payload\cf4 \strokec4 ).\cf7 \strokec7 codeUnits\cf4 \strokec4 );\cb1 \
\
\cb3   \cf12 \strokec12 //assinatura\cf4 \cb1 \strokec4 \
\cb3   \cf12 \strokec12 //e necessario instalar a lib crypto\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 hmac\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf6 \strokec6 Hmac\cf4 \strokec4 (\cf7 \strokec7 sha256\cf4 \strokec4 , \cf7 \strokec7 secret\cf4 \strokec4 .\cf7 \strokec7 codeUnits\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 digest\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf7 \strokec7 hmac\cf4 \strokec4 .\cf9 \strokec9 convert\cf4 \strokec4 (\cf5 \strokec5 "\cf8 \strokec8 $\cf7 \strokec7 header64\cf5 \strokec5 .\cf8 \strokec8 $\cf7 \strokec7 payload64\cf5 \strokec5 "\cf4 \strokec4 .\cf7 \strokec7 codeUnits\cf4 \strokec4 );\cb1 \
\cb3   \cf6 \strokec6 String\cf4 \strokec4  \cf7 \strokec7 sign\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf9 \strokec9 base64Encode\cf4 \strokec4 (\cf7 \strokec7 digest\cf4 \strokec4 .\cf7 \strokec7 bytes\cf4 \strokec4 );\cb1 \
\
\cb3   \cf10 \strokec10 return\cf4 \strokec4 (\cf5 \strokec5 "\cf8 \strokec8 $\cf7 \strokec7 header64\cf5 \strokec5 .\cf8 \strokec8 $\cf7 \strokec7 payload64\cf5 \strokec5 .\cf8 \strokec8 $\cf7 \strokec7 sign\cf5 \strokec5 \'94\cf4 \strokec4 );1\'a7\cb1 \
\cb3 \}\cb1 \
\
}